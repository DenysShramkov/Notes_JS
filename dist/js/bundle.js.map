{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF,2BAA2B;AAC3B;;;;;;UCXA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,iBAAiB,mBAAO,CAAC,gCAAQ,GAAG;;AAEpC,yCAAyC;;AAEzC,0BAA0B;AAC1B,4BAA4B;AAC5B;AACA,mF","sources":["webpack://src/./src/js/main.js","webpack://src/webpack/bootstrap","webpack://src/./src/js/script.js"],"sourcesContent":["function myModule() {\n\tthis.hello = function() {\n\t\tconsole.log('Hello');\n\t};\n\n\tthis.goodBye = function() {\n\t\tconsole.log('bye!');\n\t};\n} //по сути функция конструктор\n\nmodule.exports = myModule; //Это синтаксис command.js, чтобы данный модуль можно было использовать в другом js файле\n//это для экспорта","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const myModule = require('./main'); //для экспорта модуля из файла main\n\nconst myModuleInstance = new myModule(); //создаем экземпляр\n\nmyModuleInstance.hello(); //можем пользоваться модулем\nmyModuleInstance.goodBye(); //однако браузер не сможет собрать модули\n//он не знает, что такое require, module\n//любая модульная система должна быть собрана сборщиком в один результрирующий файл"],"names":[],"sourceRoot":""}