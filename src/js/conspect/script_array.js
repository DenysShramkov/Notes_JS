'use strict';

const arr = [1, 3, 4, 6, 8, 10, 54];
/* Псевдомассив отличается тем, что это на самом деле объет, который хранит в себе данные по порядку
не имеет всех тех методов, что и массивы */

arr[99] = 8;
console.log(arr.length); /* будет 100 элементов, хотя их всего 8. 
Пустые элементы тоже считаются. Это приводит к нарушению логики и нумерации */

arr.forEach(function(item, i, arr) { /* три аргумента, первый - значение, второй - номер по порядку,
	последнее - это массив, который необходимо перебрать */
	console.log(`Элемент номер ${i} - это ${item}`);
	/* Вызывает callback функцию и позволяет гибко настроить функцию,
	которая будет работать для каждого элемента массива */
});

/*  у for ... of преимуществом является то, что можно использовать break и continue */
for (let value of arr) {
	console.log(value); /* of оператор позволяет перебрать элементы, но только с массиво подобными сущностями,
	не рботает с объектами */
}

for (let i = 0; i < arr.length; i++) {
	console.log(arr[i]);  
} /* Один из вариантов перебора элементов массива */

const str = prompt('something', ''); /* вводим некую строку */
let products = str.split(", "); /* указываем разделитель и формируем массив из строки, разделитель отмечает элементы */

const arrJoin = ['lorem', 'ipsum', 'dolor', 4, 65, 12];
arrJoin.sort(); /* отсортирует в алфавитном порядке как строки. Это относится и к цирам
1, 5, 13, 25 будет как 1 13 25 5, сортировка пойдет посимвольно */
arrJoin.sort(compareNum); /* Сортировка чувствительна к верхнему регистру, он в приоритете */
function compareNum(a, b) {
	return (a - b); /* Готовая функция для сортировки чисел */
}
let strJoined = arrJoin.join("; ");
console.log(strJoined); /* .join объеденяет массив в строку используя выбранный разделитель между элементами */

console.log(arr.length); /* Длина и индекс соотносятся так, что длина это индекспоследнего эемента +1 */

arr.pop(); /* удаляет последний элемент в массиве */

console.log(arr);

arr.push(102); /* дописывает элемент в конец массива */

console.log(arr);