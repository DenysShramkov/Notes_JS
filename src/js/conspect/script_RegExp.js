'use strict';

//регулярное выражение состоит из двух частей: паттерн и флаги
//патерн - это шаблон того, что мы ищем

// new RegExp('pattern', 'flags'); //классический синтаксис для регулярных выражений, которым никто не пользуется
//так как есть более короткий сопосб

//    /pattern/f //pattern - шаблон, f - флаги

const ans = prompt('Введите ваше имя');

const reg = /n/i; //i - это флаг
//i - если мы хотим что-то найти не зависимо от регистра
//g - флаг глобальности, если надо найти больше одного вхождения
//m - включает многострочный режим
//можно комбинировать в любом порядке

//флаг для search ставить нет смысла, так как он ищет только первое совпадение и вернет индекс
console.log(ans.search(reg)); //в консоль лог поиск по рег выражению, внутри вставлени в шаблон символ n
//в консоль выйдет количество символов n

console.log(ans.match(reg));
//покажет первое совпадение, даст индекс и покажет строку в которой был поиск

const regg = /n/g; //если поставить флаг глобальности, мы получим массив со всеми найденными результатами

console.log(ans.match(regg));

console.log(ans.replace(/./g, '*')); //регулярные выражения можно создавать прямо внутри аргумента
//первое - это что мы ищем, второй аргумент - 
// . - это все символы, что попадут в строку, флаг глобальности для того, чтобы взять все символы
//* - это то, на что мы заменим символы, указанные в регулярном выражении в шаблоне
//если хотим поменять на ничего, просто указываем пустую строку ''

// если мы хотим найти именно точку, а не использовать ее как спец символ, тогда её надо экранировать \.

// чтобы найти обратный слеш его тоже надо экранировать \\ это относится к ^ | & и другим
// а так / / будет поиск пробелов

console.log('23-56-77'.replace(/-/g, ':')); //заменить все - на :

console.log(reg.test(ans)); //метод чтобы посмотреть, есть ли в строке, передающейся в test что-то похожее на паттерн
//возращает true или false
const num = /\d/g;
//если мы ъотим искать целый класс символов
// \d - digits - цифры, будет осуществлять поиск цифр 
// \w words - все слова ищем, все буквы
// \s spaces или / / - пробел
console.log(ans.match(num)); //мы получим все цифры из строки

const str = 'My name is R2D2';
console.log(str.match(/\w\d\w\d/i)); //мы создали шаблон по которому ищем буква цифра буква цифра и получаем R2D2
//так как это буква цифра буква цифра

//если мы хотим исключить:
// \D не цифры
// \S не пробелы
// \W не буквы
console.log(str.match(/\D/ig)); //получим все символы в строке кроме цифр

console.log('hellапааo, worl222.!'.replace(/[\d\s\\\'\"\!\@\#\$\%\^\&\,\.\=\/\?\+\_\*\;\:\>\<\`\~\{\}\[\]\(\)']/g, ''));

//.match(/\w/g).join('')



//const stringTitleDeletedAllSymbols = item.snippet.title.replace(/[\d\s\\\'\"\!\@\#\$\%\^\&\,\.\=\/\?\+\_\*\;\:\>\<\`\~\{\}\[\]\(\)']/g, '');
//&& 0.9*stringTitleDeletedAllSymbols.length < stringTitleDeletedAllSymbols.match(/\w/ig).length) {
	//задумка в том, что \w - аналог [a-z0-9A-Z], если текст английский, длина должна примерно совпасть со строкой
	//stringTitleDeletedAllSymbols
	//ЕСли язык другой, длина строки с match(/\w/ig) должна быть значительно короче